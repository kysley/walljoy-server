### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  devices(after: DeviceWhereUniqueInput, before: DeviceWhereUniqueInput, first: Int, last: Int): [Device!]!
  email: String!
  id: String!
}

type Collection {
  createdAt: DateTime!
  id: Int!
  name: String!
  official: Boolean!
  updatedAt: DateTime!
  wallpapers(after: WallpaperWhereUniqueInput, before: WallpaperWhereUniqueInput, first: Int, last: Int): [Wallpaper!]!
}

input CollectionWhere {
  id: Int
  name: String
}

input CollectionWhereUniqueInput {
  id: Int
}

type Credentials {
  refreshToken: String!
  token: String!
}

scalar DateTime

type Device {
  account: Account!
  authorized: Boolean!
  code: String!
  id: String!
  name: String!
}

input DeviceWhereUniqueInput {
  id: String
}

input LoginInput {
  email: String!
  sessionId: String!
}

type Mutation {
  authenticateSession(sId: String!): Boolean
  refreshCredentials(refreshToken: String!): Credentials!
  register(input: LoginInput!): Credentials
}

input PaginationArgs {
  cursor: Int
  take: Int! = 15
}

type Query {
  collection(where: CollectionWhere!): Collection
  feed(where: PaginationArgs): [Wallpaper]
  signin: Account
  wallpaper(where: WallpaperWhereUniqueInput!): Wallpaper
  wallpapers(where: PaginationArgs): [Wallpaper]
}

type Wallpaper {
  collection(after: CollectionWhereUniqueInput, before: CollectionWhereUniqueInput, first: Int, last: Int): [Collection!]!
  createdAt: DateTime!
  id: Int!
  u_url: String!
  updatedAt: DateTime!
}

input WallpaperWhereUniqueInput {
  id: Int
  u_url: String
}
